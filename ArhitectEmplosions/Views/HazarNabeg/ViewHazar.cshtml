@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <style>
        .alert {
            padding: 15px;
            border: 1px solid #d6e9c6;
            border-radius: 4px;
            color: #3c763d;
            background-color: #dff0d8;
        }
    </style>
    <title>Быстрый старт. Размещение интерактивной карты на странице</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <script src="https://api-maps.yandex.ru/2.1/?apikey=d5e25ddd-0718-4acb-a851-ff855eddb60d&lang=ru_RU" type="text/javascript"> </script>
</head>
    <body>
        <h1 id="Hazar">ХазАРХский набег</h1>
        <div style="display:flex">
            <div style="display:flex;flex-direction:column; width:10%">
                <button id="all">Все</button>
                <button id="positive">Положительные</button>
                <button id="negative">Отрицательные</button>
                <button id="neutral">Нейтральные</button>
            </div>
            <div style="display:flex;">
            <div id="map" style="width: 1200px;height: 960px"></div>
            </div>
             <div style="width:400px; height: 820px; display:flex; flex-direction:column; font-size: 13px; border:solid; border-color:green">
                <h3>Дифференцирование</h3>
                <div style=" width:200px; display:flex; flex-direction:column;">
                    <h3>Пол</h3>
                    <div style="height:20%; display:flex;">
                        <p><input type="radio" name="Gender" value=""  />Не указано</p>
                        <p><input type="radio" name="Gender" value="Муж"  />Муж </p>
                        <p><input type="radio" name="Gender" value="Жен" />Жен</p>
                    </div>
                </div>

                <h3>Где вы живете?</h3>
                <div style="display:flex; flex-direction:column; flex-wrap: wrap; height:20%">
                    <p><input type="radio" name="Place" value=""  />Не указано</p>
                    <p><input type="radio" name="Place" value="В общежитии"  />В общежитии</p>
                    <p><input type="radio" name="Place" value="Район Черниковка" />Район Черниковка</p>
                    <p><input type="radio" name="Place" value="В другой части города" />В другой части города</p>
                    <p><input type="radio" name="Place" value="За городом" />За городом </p>
                    <p><input type="radio" name="Place" value="В другом городе" />В другом городе </p>
                </div>

                <h3>Вы посещаете кампус как:</h3>
                <div style=" display:flex; flex-direction:column;flex-wrap: wrap; height:20%">
                <p><input type="radio" name="Visiting" value="" />Не указано</p>
                    <p><input type="radio" name="Visiting" value="Студент-бакалавр"  />Студент-бакалавр</p>
                    <p><input type="radio" name="Visiting" value="Студент-Магистр" />Студент-Магистр</p>
                    <p><input type="radio" name="Visiting" value="Студент-аспирант" />Студент-аспирант</p>
                    <p><input type="radio" name="Visiting" value="Преподаватель" />Преподаватель</p>
                    <p><input type="radio" name="Visiting" value="Сотрудник ВУЗа" />Сотрудник ВУЗа</p>
                    <p><input type="radio" name="Visiting" value="Гость" />Гость</p>
                    <p><input type="radio" name="Visiting" value="Партнер ВУЗа" />Партнер ВУЗа</p>
                    <p><input type="radio" name="Visiting" value="Горожанин" />Горожанин</p>
                </div>

                <h3>Возраст</h3>
                <div style=" display:flex; flex-direction:column; flex-wrap: wrap; height:20%">
                <p><input type="radio" name="Age" value="" />Не указано</p>
                    <p><input type="radio" name="Age" value="14-17"  />14-17</p>
                    <p><input type="radio" name="Age" value="18-24" />18-24</p>
                    <p><input type="radio" name="Age" value="25-35" />25-35</p>
                    <p><input type="radio" name="Age" value="36-45" />36-45</p>
                    <p><input type="radio" name="Age" value="46-60" />46-60</p>
                    <p><input type="radio" name="Age" value="61-74" />61-74</p>
                    <p><input type="radio" name="Age" value="75 и более" />75 и более</p>
                </div>
            <button id="diff">Продифференцировать</button>
            </div>
        </div>
    <script type="text/javascript">
        class HazarNabeg {
            Id
            CoordX
            CoordY
            PositiveEmotions
            NegativeEmotions
            NeutralEmotions
            constructor() {
                this.List = [];
            }
        }
        const set = [];
        ymaps.ready(init);
        function init() {
            const reuqestUrl = "/HazarNabeg/GetQuestionnaires";
            const xhr = new XMLHttpRequest();
            xhr.open("Get", reuqestUrl);
            xhr.responseType = "json";
            xhr.onload = () => {
                var Hazar = JSON.parse(xhr.response);
                var myMap = new ymaps.Map("map",
                {
                    center: [Hazar.X, Hazar.Y],
                    zoom: 17
                });
                DrawEmotion(Hazar.PositiveEmotions);
                DrawEmotion(Hazar.NegativeEmotions);
                DrawEmotion(Hazar.NeutralEmotions);
                
                document.getElementById("all").addEventListener("click", DrawAll);
                document.getElementById("positive").addEventListener("click", () => DrawEmotion(Hazar.PositiveEmotions, 1));
                document.getElementById("negative").addEventListener("click", () => DrawEmotion(Hazar.NegativeEmotions, 1));
                document.getElementById("neutral").addEventListener("click", () => DrawEmotion(Hazar.NeutralEmotions, 1));
                function DrawEmotion(coll, btn = 0) {
                    if (btn != 0) { 
                        myMap.geoObjects.removeAll();
                    }
                    for (var i = 0; i < coll.length; i++) {
                        var polygon = new ymaps.Polygon(
                            [[
                                [coll[i].Points[0].X, coll[i].Points[0].Y],
                                [coll[i].Points[1].X, coll[i].Points[1].Y],
                                [coll[i].Points[2].X, coll[i].Points[2].Y],
                                [coll[i].Points[3].X, coll[i].Points[3].Y],
                            ]], {},
                            {
                                editorMaxPoints: 5,
                                // Цвет заливки.
                                fillColor: coll[i].Color,
                                // Цвет обводки.
                                strokeColor: coll[i].Color,
                                // Ширина обводки.
                                strokeWidth: 5
                            });
                        myMap.geoObjects.add(polygon);
                    }
                }
                function DrawAll() { 
                    DrawEmotion(Hazar.PositiveEmotions);
                    DrawEmotion(Hazar.NegativeEmotions);
                    DrawEmotion(Hazar.NeutralEmotions);
                }
                function diffVal(list) {
                    for (var i = 0; i < list.length; i++) {
                        if (list[i].checked) {
                            return list[i].value;
                        }
                    }
                    return "";
                }
                document.getElementById("diff").addEventListener("click", Differentiation);
                function Differentiation() { 
                    var listDiff = Hazar.Quastionnaires;
                    console.log(Hazar);
                    var genVal = diffVal(document.getElementsByName("Gender"));
                    var placeVal = diffVal(document.getElementsByName("Place"));
                    var visitorVal = diffVal(document.getElementsByName("Visiting"));
                    var ageVal = diffVal(document.getElementsByName("Age"));
                    if (genVal != "") { 
                        listDiff = listDiff.filter(p => p.Differentiation.Gender == genVal);
                    }
                    if (placeVal != "") {
                        listDiff = listDiff.filter(p => p.Differentiation.Place == placeVal);
                    }
                    if (visitorVal != "") {
                        listDiff = listDiff.filter(p => p.Differentiation.Visiting == visitorVal);
                    }
                    if (ageVal != "") {
                        listDiff = listDiff.filter(p => p.Differentiation.Age == ageVal);
                    }
                    console.log(listDiff);
                    myMap.geoObjects.removeAll();
                    for (var i = 0; i < listDiff.length; i++) { 
                        DrawEmotion(listDiff[i].Emotions);
                    }
                }
            }
            xhr.send();
        }
    </script>
    </body>
</html>