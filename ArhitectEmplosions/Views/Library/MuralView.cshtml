@model (List<ArhitectEmplosions.Models.Poke.EmotionMuralView>, string)

<div style="display: flex; flex-direction: column; align-items: center">
    <div>
        <h5 style = "font-size: 40px; font-family: 'TildaSans', Arial, sans-serif;">Муралы</h5>
    </div>
    <div style="width: 60%">
        <h6 style="text-indent: 50px; text-align: justify; font-size: 25px; font-family: 'TildaSans', Arial, sans-serif;"> Мурал - это вид монументальной живописи на стенах архитектурных сооружений, 
            который помогает сформировать визуальный облик пространства. Многие свежесозданные современные муралы 
            становятся точками привлечения внимания для туристов и обладают символической ценностью для местных жителей.
            Темами для мурала на торце 3-го учебного корпуса УГНТУ, который находится в кампусе университета, 
            стали "Современная архитектура", "Студенческая жизнь", "Экология" и "Нефтяной университет".</h6>
    </div>
</div>
<div style="display:flex; justify-content: center; margin-top: 40px">
    <div style="display:flex; flex-wrap: wrap; width: 60%">
        @foreach (var item in Model.Item1)
        {
            if (Model.Item2 == "admin")
            {
                <form asp-controller="Library" asp-action="DeleteProj" asp-route-id="@item.Id">
                    <input type="submit" value="delete">
                </form>
            }
            <div class = "cardlib" pathJson = "@item.ImageList" projectId = "@item.Id">
                <div style="display: flex; justify-content: center; align-items: center; width:300px; height: 500px">
                    @if (item.ImagePaths.Count > 0)
                    {
                        <img style="width:300px; height: 500px" src="@("data:image/png;base64," + Convert.ToBase64String(item.MainPicture!.Image!))" alt=""/>
                    }
                </div>
                <div style = "display: flex; justify-content: space-between; width: 80%; margin-top: 4px;">
                    <div style = "background-color: #45bb45; width: 20%; text-align: center; border-radius: 5px; margin-top: 4px;">
                        <h3>@(item.Positive)</h3>
                    </div>
                    <div style = "background-color: #bb4545; width: 20%; text-align: center; border-radius: 5px; margin-top: 4px;">
                        <h3>@(item.Negative)</h3>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="parent_popup" style="display: none">
    <div id="popup">

    </div>
</div>

<script>
    function ClickProject(id, listPath)
    {
        let pop = document.getElementById("popup");
        let _images = JSON.parse(listPath);
        let mainDiv = document.createElement("div");
        mainDiv.setAttribute("id","mainDiv");
        mainDiv.setAttribute("style", "display:flex; flex-direction:column; align-items: center;");
        let container = document.createElement("div");
        let exitDiv = document.createElement("div");
        let reactDiv = document.createElement("div");
        reactDiv.setAttribute("id", "reaction");
        reactDiv.setAttribute("style", "display:flex; justify-content: flex-end; width: 100%; margin-bottom: 20px;");
        let vood = document.createElement("button");
        let nevood = document.createElement("button");
        vood.setAttribute("class","positivebtn");
        nevood.setAttribute("class","negativebtn");
        vood.addEventListener("click", ()=>SendVdoh(id));
        nevood.addEventListener("click", ()=>SendNeVdoh(id));
        vood.innerText = "Вдохновляет"
        nevood.innerText = "Не вдохновляет"
        reactDiv.appendChild(vood);     
        reactDiv.appendChild(nevood);        
        exitDiv.setAttribute("style", "display:flex; justify-content:flex-end; width:95%");
        let exit = document.createElement("button");
        exit.innerText = "Закрыть";
        exit.addEventListener("click", RemoveModal);
        exitDiv.appendChild(exit)
        container.setAttribute("id", "images");
        for (let i = 1; i < _images.length; i++)
        {
            let image = document.createElement('img');
            image.setAttribute("src", "data:image/jpg;base64," + _images[i].Image);
            container.appendChild(image);
        }
        mainDiv.appendChild(exitDiv);
        mainDiv.appendChild(container);
        mainDiv.appendChild(reactDiv);
        let teachDiv = document.getElementById("parent_popup");
        pop.appendChild(mainDiv);
        teachDiv.setAttribute("style", "");
    }
    function RemoveModal()
    {
        document.getElementById('parent_popup').style.display='none';
        document.getElementById("mainDiv").remove();
    }
    let listObj = document.getElementsByClassName("cardlib");
    for (let i = 0; i < listObj.length; i++)
    {
        let _id = listObj[i].getAttribute("projectId"); 
        let _pathJson = listObj[i].getAttribute("pathJson"); 
        listObj[i].addEventListener("click", ()=>ClickProject(_id,_pathJson));
    }
    async function SendVdoh(id)
    {
        const response = await fetch(`/Library/Vdoh`, {
            method: 'POST',
            headers: {
                'Content-type': 'application/json',
            },
            body: JSON.stringify({Id:id})
        });
        if (response.ok === true) {
            document.getElementById("reaction").setAttribute("style","display:none; justify-content: flex-end; width: 100%; margin-bottom: 20px;")
        }
        else {
            const error = await response.json();
            console.log(error.message);
        }
    }
    async function SendNeVdoh(id)
    {
        const response = await fetch(`/Library/NeVdoh`, {
            method: 'POST',
            headers: {
                'Content-type': 'application/json',
            },
            body: JSON.stringify({Id:id})
        });
        if (response.ok === true) {
            document.getElementById("reaction").setAttribute("style","display:none; justify-content: flex-end; width: 100%; margin-bottom: 20px;")
        }
        else {
            const error = await response.json();
            console.log(error.message);
        }
    }
</script>
<style>
    #parent_popup {
        background-color: rgba(0, 0, 0, .5);
        height: 100%;
        position: fixed;
        width: 100%;
        z-index: 100;
        top: 0;
        left: 0;
        display: flex;
        justify-content: center;
    }

    #popup {
        background-color: #fff;
        position: fixed;
        top: 100px;
        color: black;
        width: 80%;
    }
</style>